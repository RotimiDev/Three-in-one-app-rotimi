// Generated by view binder compiler. Do not edit!
package com.example.punchandroidtest.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ProgressBar;
import android.widget.SearchView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.punchandroidtest.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentApiFetchBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final RecyclerView apiFetchRecyclerView;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final SearchView searchView;

  @NonNull
  public final Button statusButton;

  @NonNull
  public final SwipeRefreshLayout swipeRefresh;

  @NonNull
  public final Toolbar viewToolbar;

  private FragmentApiFetchBinding(@NonNull ConstraintLayout rootView,
      @NonNull RecyclerView apiFetchRecyclerView, @NonNull ProgressBar progressBar,
      @NonNull SearchView searchView, @NonNull Button statusButton,
      @NonNull SwipeRefreshLayout swipeRefresh, @NonNull Toolbar viewToolbar) {
    this.rootView = rootView;
    this.apiFetchRecyclerView = apiFetchRecyclerView;
    this.progressBar = progressBar;
    this.searchView = searchView;
    this.statusButton = statusButton;
    this.swipeRefresh = swipeRefresh;
    this.viewToolbar = viewToolbar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentApiFetchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentApiFetchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_api_fetch, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentApiFetchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.api_fetch_recyclerView;
      RecyclerView apiFetchRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (apiFetchRecyclerView == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.search_view;
      SearchView searchView = ViewBindings.findChildViewById(rootView, id);
      if (searchView == null) {
        break missingId;
      }

      id = R.id.statusButton;
      Button statusButton = ViewBindings.findChildViewById(rootView, id);
      if (statusButton == null) {
        break missingId;
      }

      id = R.id.swipeRefresh;
      SwipeRefreshLayout swipeRefresh = ViewBindings.findChildViewById(rootView, id);
      if (swipeRefresh == null) {
        break missingId;
      }

      id = R.id.view_toolbar;
      Toolbar viewToolbar = ViewBindings.findChildViewById(rootView, id);
      if (viewToolbar == null) {
        break missingId;
      }

      return new FragmentApiFetchBinding((ConstraintLayout) rootView, apiFetchRecyclerView,
          progressBar, searchView, statusButton, swipeRefresh, viewToolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
